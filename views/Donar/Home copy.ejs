<!DOCTYPE html>
<html lang="en">
  <head>
    <%- include('../header'); %>
  </head>

  <body>
    <%- include('./navbar') %>
    <section class="home">
      <div class="container flex">
        <div class="homeMain">
          <div class="availableBlood">
            <h6 class="title justify-center">
              Total Available Blood In All Blood Banks
            </h6>
            <div class="blood-group-grid justify-center">
              <% availableBlood.map((t)=> {%>
              <div class="blood-groud">
                <div class="blood-group--header">
                  <h3><%=t.bloodtype %></h3>
                </div>
                <div class="blood-group--body">
                  <h2 class="units"><%=t.units %></h2>
                  <p class="units-text">Units</p>
                </div>
              </div>
              <% }) %>
            </div>
          </div>
        </div>
        <% if(user.isDonar){ %>
        <div class="homeAddBlood">
          <h6 class="title justify-center">Add Blood</h6>
          <form class="addBloodForm">
            <div class="form-input-material">
              <input
                id="availableBlood"
                class="form-control-material"
                type="text"
                autofocus="false"
                name="availableBlood"
                autofocus=""
                placeholder=""
                autoComplete="off"
                required
              />
              <label use="availableBlood">Available Blood</label>
            </div>
            <div class="form-input-material">
              <input
                id="Location"
                class="form-control-material"
                type="text"
                autofocus="false"
                name="Location"
                placeholder=""
                autoComplete="off"
                required
              />
              <label use="Location">Location</label>
            </div>
            <div class="form-input-material">
              <input
                id="Units"
                class="form-control-material"
                type="text"
                autofocus="false"
                name="Units"
                placeholder=""
                autoComplete="off"
                required
              />
              <label use="Units">Units</label>
            </div>
            <button class="btn" type="submit">Add</button>
          </form>
        </div>
        <% } else{ %> <% } %>
      </div>
    </section>

    <section class="search-result">
      <div class="container">
        <% if(searchData){ %>
        <h3><%=searchData.group %></h3>
        <% } %>
      </div>
    </section>

    <section>
      <div class="container">
        <div class="homeAddBlood">
          <h6 class="title justify-center">Search for Blood</h6>
          <form class="addBloodForm">
            <div class="custom-select">
              <select class="group" name="group">
                <option value="A+">A+</option>
                <option value="A-">A-</option>
                <option value="B+">B+</option>
                <option value="B-">B-</option>
                <option value="O+">O+</option>
                <option value="O-">O-</option>
                <option value="AB+">AB+</option>
                <option value="AB-">AB-</option>
              </select>
            </div>
            <br />

            <div class="form-input-material">
              <input
                id="Location"
                class="form-control-material"
                type="text"
                autofocus="false"
                name="Location"
                placeholder=""
                autoComplete="off"
                required
              />
              <label use="Location">Location</label>
            </div>
            <div class="form-input-material">
              <input
                id="Units"
                class="form-control-material"
                type="text"
                autofocus="false"
                name="Units"
                placeholder=""
                autoComplete="off"
                required
              />
              <label use="Units">Units</label>
            </div>
            <button class="btn" type="submit">Search</button>
          </form>
        </div>
      </div>
    </section>

    <script>
      var x, i, j, l, ll, selElmnt, a, b, c;
      /*look for any elements with the class "custom-select":*/
      x = document.getElementsByClassName("custom-select");
      l = x.length;
      for (i = 0; i < l; i++) {
        selElmnt = x[i].getElementsByTagName("select")[0];
        ll = selElmnt.length;
        /*for each element, create a new DIV that will act as the selected item:*/
        a = document.createElement("DIV");
        a.setAttribute("class", "select-selected");
        a.innerHTML = selElmnt.options[selElmnt.selectedIndex].innerHTML;
        x[i].appendChild(a);
        /*for each element, create a new DIV that will contain the option list:*/
        b = document.createElement("DIV");
        b.setAttribute("class", "select-items select-hide");
        for (j = 1; j < ll; j++) {
          /*for each option in the original select element,
      create a new DIV that will act as an option item:*/
          c = document.createElement("DIV");
          c.innerHTML = selElmnt.options[j].innerHTML;
          c.addEventListener("click", function (e) {
            /*when an item is clicked, update the original select box,
          and the selected item:*/
            var y, i, k, s, h, sl, yl;
            s = this.parentNode.parentNode.getElementsByTagName("select")[0];
            sl = s.length;
            h = this.parentNode.previousSibling;
            for (i = 0; i < sl; i++) {
              if (s.options[i].innerHTML == this.innerHTML) {
                s.selectedIndex = i;
                h.innerHTML = this.innerHTML;
                y = this.parentNode.getElementsByClassName("same-as-selected");
                yl = y.length;
                for (k = 0; k < yl; k++) {
                  y[k].removeAttribute("class");
                }
                this.setAttribute("class", "same-as-selected");
                break;
              }
            }
            h.click();
          });
          b.appendChild(c);
        }
        x[i].appendChild(b);
        a.addEventListener("click", function (e) {
          /*when the select box is clicked, close any other select boxes,
        and open/close the current select box:*/
          e.stopPropagation();
          closeAllSelect(this);
          this.nextSibling.classList.toggle("select-hide");
          this.classList.toggle("select-arrow-active");
        });
      }
      function closeAllSelect(elmnt) {
        /*a function that will close all select boxes in the document,
    except the current select box:*/
        var x,
          y,
          i,
          xl,
          yl,
          arrNo = [];
        x = document.getElementsByClassName("select-items");
        y = document.getElementsByClassName("select-selected");
        xl = x.length;
        yl = y.length;
        for (i = 0; i < yl; i++) {
          if (elmnt == y[i]) {
            arrNo.push(i);
          } else {
            y[i].classList.remove("select-arrow-active");
          }
        }
        for (i = 0; i < xl; i++) {
          if (arrNo.indexOf(i)) {
            x[i].classList.add("select-hide");
          }
        }
      }
      /*if the user clicks anywhere outside the select box,
  then close all select boxes:*/
      document.addEventListener("click", closeAllSelect);
    </script>
  </body>
</html>
